doctype html
html
  head
    title VARTISTE Toolkit Demo
    script src="https://aframe.io/releases/1.0.4/aframe.js"

    /! Just include the toolkit js file
    script src="/vartiste-toolkit.js"

  body
    a-scene icon-button="shader: matcap" renderer="colorManagement: true"
      a-assets
        canvas#draw-canvas-asset width="1024" height="768"
        a-asset#hdr
        /! You can use all the default VARTISTE assets with the vartiste-asset meta-asset
        /! Otherwise, only the ones needed for other components are included
        a-asset vartiste-assets=""
      a-sky color="#333" hdri-environment="src: #hdr"

      a-entity light="type: hemisphere; color: #eee; groundColor: #333; intensity: 0.6"
      a-entity light="type: ambient; color: #fff; intensity: 0.6"

      /! vartiste-user-root sets up the default laser pointer / mouse & keyboard
      /! interactions. If you want to define your own user setup, you'll want to
      /! make sure to include the manipulator components on both of the hand
      /! components to ensure that things can be grabbed and resized.
      a-entity vartiste-user-root=""

      a-entity position="0 0 -2.5"
        /! A shelf provides a definitive place to put things. "grab-root" ensures that grab-and-move events propogate to the whole shelf
        a-entity.grab-root shelf=""
          /! icon-buttons position themselves in a row automatically. So we just position this outer entity where we want the row to start
          a-entity position="-1.5 1.1 0"
            /! Simply pass an asset to icon-button, and boom, you've got an icon button that responds to a wide range of clicks
            a-entity icon-button="#asset-eye" tooltip="Run Javascript onclick handler" onclick="alert('click')"
            /! You can make it a toggle button by adding the toggle-button component
            a-entity icon-button="#asset-oven" toggle-button="" tooltip="Toggle Me"
            /! You can style it, too
            a-entity icon-button="" tooltip="Look at the colors! Woah!" button-style="color: #ed8607; clickColor: #8607ed; intersectedColor: #07ed86"
            /! Add the system-click-action to easily call methods of systems
            a-entity icon-button="#asset-account-voice" system-click-action="system: toolkit-demo; action: speak" tooltip="Speak entered text if enabled"
            /! Or add component properties directly for the toggle buttons to toggle
            a-entity icon-button="#asset-check-outline" toggle-button="target: a-scene; component: speech; property: speak" tooltip="Toggle Speaking Enabled"

            a-entity icon-button="#asset-help-circle-outline" system-click-action="system: toolkit-demo; action: help" tooltip="VARTISTE Toolkit Documentation"
          a-entity text="width: 3.4; wrapCount: 35; value: Welcome to the VARTISTE toolkit demo" position="0 0.5 0"
          a-entity
            /! You can use edit fields which pop up a keyboard
            a-entity#demo-input text="width: 2; wrapCount: 20; value: default text" edit-field="type: string; tooltip: Edit a string!"
          a-entity position="0 -0.6 0"
            /! You can also have a numerical edit field
            a-entity text="width: 2; wrapCount: 4" edit-field="type: number; tooltip: Edit a number"
      /! You can put a frame around anything with a geometry. The frame can optionally be closeable, or pinnable to your hand
      a-image src="#asset-vartiste" frame="" position="0 2 -1" tooltip="Here's a floating frame!" tooltip-style="offset: 0 0.5 0"

      /! Adding the clickable class to anything makes it grabbable
      a-entity.clickable text="width: 2.4; wrapCount: 25; value: Desktop Controls:\n-Left Click: Click buttons\n-Right Mouse Buton Drag: Look around\n-Shift+Left Mouse Button Drag: Move things\n-WASD: Move around" position="-3.0 0 -2.5"

      /! You can use some of the VARTISTE drawing tools, too!
      a-entity.clickable position="3.1 0 -2.4" draw-canvas="canvas:#draw-canvas-asset" geometry="primitive: plane; width: 2; height: 1.75" material="shader: flat; src: #draw-canvas-asset; npot: true" canvas-updater="throttle: 5" frame="" tooltip="Draw Here" tooltip-style="offset: 0 0.75 0"
      a-entity.clickable position="3.1 2 -2.4" geometry="primitive: circle; radius: 1; height: 1.75" color-picker=""

      a-sphere.clickable radius="0.1" constrain-to-sphere="" material="shader: standard; roughness: 0.3; metalness: 0.7" position="0 0.4 -0.4"
